
spring:
  lifecycle:
    timeout-per-shutdown-phase: 2m
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    properties:
      applicationName: lumini
  main:
    banner-mode: off
    web-application-type: reactive
    cloud-platform: kubernetes
  webflux:
    problemdetails:
      enabled: true
    format:
      time: iso
      date: iso
      date-time: iso
  flyway:
    password: postgres
    user: postgres
    url: jdbc:postgresql://localhost:5432/postgres
  cloud:
    azure:
      servicebus:
        connection-string: ${AZURE_SERVICEBUS_NAMESPACE}
        retry:
          mode: fixed
          fixed:
            max-retries: 50
    stream:
      bindings:
        companyUpdated-out-0:
          destination: company-updated-queue
          content-type: application/json
        companyUpdatedConsumer-in-0:
          destination: company-updated-queue
          content-type: application/json
          consumer:
            concurrency: 20
            max-attempts: 0
        companyUpdatedDlqConsumer-in-0:
          destination: company-updated-queue/$DeadLetterQueue
      servicebus:
        bindings:
          companyUpdated-out-0:
            producer:
              entity-type: queue
          companyUpdatedConsumer-in-0:
            consumer:

              maxConcurrentCalls: 20
              maxConcurrentSessions: 20
              requeue-rejected: false
              auto-complete: false
              entityType: queue
              prefetchCount: 10

#          companyUpdatedDlqConsumer-in-0:
#            consumer:
#              requeue-rejected: true
#              auto-complete: false
#              entityType: queue

    function:
      definition: companyUpdated; companyUpdatedConsumer;
      expected-content-type:
  integration:
    poller:
      initial-delay: 30000
      fixed-delay: 60000
      max-messages-per-poll: 10

  jackson:
    serialization:
      WRITE_DURATIONS_AS_TIMESTAMPS: false

logging:
  level:
    org:
      springframework:
        cloud:
          sleuth: DEBUG
        validation: INFO
        r2dbc: INFO
    io.r2dbc.postgresql.QUERY: INFO # for queries
    io.r2dbc.postgresql.PARAM: INFO # for parameters
    web: info

server:
  error:
    whitelabel:
      enabled: false
    include-binding-errors: always
    include-exception: off
    include-stacktrace: never
  compression:
    enabled: true
    min-response-size: 1024
  http2:
    enabled: true
  forward-headers-strategy: framework
  port: 9191
  shutdown: graceful
springdoc:
  show-actuator: true
  api-docs:
    version: openapi_3_1
  swagger-ui:
    use-root-path: true
management:
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always
      probes:
        add-additional-paths: true
  endpoints:
    web:
      exposure:
        include: health, shutdown, bindings
